{"version":3,"sources":["components/tile/index.tsx","assets/aboutme.svg","assets/projects.svg","assets/stack.svg","assets/services.svg","assets/information.svg","components/hero/categories/index.tsx"],"names":["CategoryCollection","props","className","style","width","height","to","url","title","rel","src","logo","alt","CategoriesComponent","getWindowDimensions","window","innerWidth","innerHeight","items","language","pages","home","categories","profile","information","about","aboutme","projects","stack","services","useState","slides","setSlides","windowDimensions","setWindowDimensions","location","useLocation","React","useEffect","handleResize","addEventListener","removeEventListener","settings","autoplay","slickPlay","autoplaySpeed","infinite","speed","pauseOnFocus","slidesToShow","slidesToScroll","cssEase","controller","ScrollMagic","Controller","Scene","triggerElement","reverse","triggerHook","setClassToggle","addTo","display","flexDirection","alignItems","position","header","map","item","i","nanoid"],"mappings":"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","file":"static/js/29.1846ea08.chunk.js","sourcesContent":["import './index.scss'\nimport { Link } from 'react-router-dom';\nimport CustomImage from '../customImage';\n\nconst CategoryCollection = (props) => {\n    return(\n        <div className=\"tile-wrapper cursor_hover\" style={{width: `${props.width}`, height: `${props.height}`}}>\n            <Link className=\"tile-link\" to={props.url} title={`Link to ${props.url}`} aria-label={`Link to ${props.url}`} referrer-policy = 'no-referrer' rel='preload'></Link>\n                <CustomImage src={props.logo} alt={props.title} title={props.title} width='100%' height='100%' className=\"tile-logo\"></CustomImage>\n                <p className=\"tile-title\">{props.title}</p>\n        </div>\n    );\n};\n\nexport default CategoryCollection;","export default __webpack_public_path__ + \"static/media/aboutme.3690944d.svg\";","export default __webpack_public_path__ + \"static/media/projects.ca914062.svg\";","export default __webpack_public_path__ + \"static/media/stack.83012401.svg\";","export default __webpack_public_path__ + \"static/media/services.241227bb.svg\";","export default __webpack_public_path__ + \"static/media/information.39a51089.svg\";","import CategoryCollection from '../../tile'\nimport aboutme from '../../../assets/aboutme.svg';\nimport projects from '../../../assets/projects.svg';\nimport stack from '../../../assets/stack.svg';\nimport services from '../../../assets/services.svg';\nimport information from '../../../assets/information.svg';\nimport Slider from 'react-slick';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport './index.scss';\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { TextRevealVertical } from '../../contentReveal'\nimport { nanoid } from 'nanoid'\nimport ScrollMagic from 'scrollmagic'\n\nconst CategoriesComponent = () => {\n    function getWindowDimensions() {\n        const { innerWidth: width, innerHeight: height } = window;\n        return {\n            width,\n            height\n        };\n    }\n    const items = [\n        {\n            url: \"/myprofile/overview\",\n            title: `${language.pages.home.categories.profile}`,\n            logo: information,\n            width: \"90%\",\n            height: \"70%\"\n        },\n        {\n            url: \"/aboutme\",\n            title: `${language.pages.home.categories.about}`,\n            logo: aboutme,\n            width: \"90%\",\n            height: \"70%\"\n        },\n        {\n            url: \"/projects\",\n            title: `${language.pages.home.categories.projects}`,\n            logo: projects,\n            width: \"90%\",\n            height: \"70%\"\n        },\n        {\n            url: \"/stack\",\n            title: `${language.pages.home.categories.stack}`,\n            logo: stack,\n            width: \"90%\",\n            height: \"70%\"\n        },\n        {\n            url: \"/services\",\n            title: `${language.pages.home.categories.services}`,\n            logo: services,\n            width: \"90%\",\n            height: \"70%\"\n        }\n    ];\n    let [slides, setSlides] = useState(3);\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n    const location = useLocation();\n    React.useEffect(() => {\n        setWindowDimensions(getWindowDimensions());\n        if (windowDimensions.width > 968) {\n            setSlides(3);\n        }\n        else if (windowDimensions.width <= 968 && windowDimensions.width > 668) {\n            setSlides(2);\n        }\n        else {\n            setSlides(1);\n        }\n    }, [location]);\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n            if (windowDimensions.width > 968) {\n                setSlides(3);\n            }\n            else if (windowDimensions.width <= 968 && windowDimensions.width > 668) {\n                setSlides(2);\n            }\n            else {\n                setSlides(1);\n            }\n        }\n\n        window.addEventListener('resize', handleResize);\n        window.addEventListener('change', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            window.removeEventListener('change', handleResize);\n        }\n    }, []);\n    let settings = {\n        autoplay: false,\n        slickPlay: true,\n        autoplaySpeed: 2000,\n        infinite: false,\n        speed: 500,\n        pauseOnFocus: true,\n        slidesToShow: slides,\n        slidesToScroll: 1,\n        cssEase: \"linear\"\n    }\n    useEffect(() => {\n        const controller = new ScrollMagic.Controller();\n\n        // create a scene\n        new ScrollMagic.Scene({\n          triggerElement: '.categories-hello',\n          reverse: false,\n          triggerHook: 0.9\n        })\n          .setClassToggle('.categories-hello', 'fade-in') // pins the element for the the scene's duration\n        .addTo(controller); // assign the scene to the controller\n      }, [])\n    return (\n        <div>\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', height: '100%', position: 'relative' }}>\n                <div className=\"categories-wrapper\">\n                    <TextRevealVertical><h2 className=\"categories-hello\">{language.pages.home.categories.header}</h2></TextRevealVertical>\n                    <Slider {...settings}>\n                        {items.map((item, i) => (\n                            <CategoryCollection key={nanoid(10)} url={item.url} title={item.title} logo={item.logo} width={item.width} height={item.height}>\n                            </CategoryCollection>\n                        ))}\n                    </Slider>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CategoriesComponent;"],"sourceRoot":""}